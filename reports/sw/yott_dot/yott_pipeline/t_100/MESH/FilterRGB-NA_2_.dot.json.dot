digraph G {
    and_g;
    switch_g;
    copymux_r0;
    lt_r;
    reg7;
    or_r;
    reg25;
    sub_g0;
    mul_g0;
    copymux_b1;
    reg11;
    gt_b;
    switch_r;
    sub_r0;
    reg0;
    switch_b;
    sub_b0;
    reg5;
    sub_g1;
    copyshr_b;
    shr_b;
    reg14;
    sub_r1;
    merge_r;
    lt_g;
    mux_g0;
    copymux_g1;
    gt_g;
    reg10;
    gt_r;
    mux_r1;
    mul_b0;
    shr_g;
    and_b;
    brighter;
    copyswitch_0;
    copyswitch_1;
    reg2;
    mul_g1;
    reg3;
    mul_b1;
    reg6;
    mux_r0;
    copymux_r1;
    copyshr_r;
    shr_r;
    copyshr_g;
    or_b;
    out_0;
    andreturn;
    reg18;
    or_g;
    shlreturn_g;
    shlreturn_r;
    copymux_b0;
    lt_b;
    reg12;
    mul_r0;
    mux_b1;
    shlreturn_b;
    merge_g;
    copymux_g0;
    mux_g1;
    reg13;
    sub_b1;
    merge_b;
    and_r;
    mux_b0;
    reg9;
    reg8;
    mul_r1;
    rgb;
    reg4;
    reg19;
    reg20;
    reg21;
    reg22;
    reg23;
    reg24;
    reg26;
    reg1;
    reg15;
    reg16;
    reg17;
    and_g -> switch_g [weight=0];
    switch_g -> mul_g1 [weight=2];
    switch_g -> sub_g0 [weight=0];
    copymux_r0 -> lt_r [weight=0];
    copymux_r0 -> reg7 [weight=0];
    lt_r -> mux_r0 [weight=0];
    reg7 -> mux_r0 [weight=0];
    or_r -> reg25 [weight=0];
    reg25 -> reg26 [weight=0];
    sub_g0 -> mul_g0 [weight=0];
    mul_g0 -> sub_g1 [weight=0];
    copymux_b1 -> reg11 [weight=0];
    copymux_b1 -> gt_b [weight=0];
    reg11 -> mux_b1 [weight=0];
    gt_b -> mux_b1 [weight=2];
    switch_r -> sub_r0 [weight=0];
    switch_r -> reg0 [weight=0];
    sub_r0 -> mul_r0 [weight=0];
    reg0 -> reg1 [weight=0];
    switch_b -> sub_b0 [weight=0];
    switch_b -> reg5 [weight=2];
    sub_b0 -> mul_b0 [weight=1];
    reg5 -> mul_b1 [weight=0];
    sub_g1 -> merge_g [weight=0];
    copyshr_b -> shr_b [weight=0];
    copyshr_b -> reg14 [weight=0];
    shr_b -> and_b [weight=0];
    reg14 -> reg15 [weight=0];
    sub_r1 -> merge_r [weight=0];
    merge_r -> copymux_r0 [weight=0];
    lt_g -> mux_g0 [weight=0];
    mux_g0 -> copymux_g1 [weight=0];
    copymux_g1 -> gt_g [weight=0];
    copymux_g1 -> reg10 [weight=2];
    gt_g -> mux_g1 [weight=0];
    reg10 -> mux_g1 [weight=0];
    gt_r -> mux_r1 [weight=0];
    mux_r1 -> shlreturn_r [weight=0];
    mul_b0 -> sub_b1 [weight=0];
    shr_g -> and_g [weight=0];
    and_b -> switch_b [weight=0];
    brighter -> copyswitch_0 [weight=3];
    copyswitch_0 -> switch_r [weight=0];
    copyswitch_0 -> copyswitch_1 [weight=0];
    copyswitch_1 -> reg2 [weight=0];
    copyswitch_1 -> switch_g [weight=4];
    reg2 -> switch_b [weight=2];
    mul_g1 -> reg3 [weight=0];
    reg3 -> reg4 [weight=0];
    mul_b1 -> reg6 [weight=0];
    reg6 -> merge_b [weight=0];
    mux_r0 -> copymux_r1 [weight=0];
    copymux_r1 -> gt_r [weight=0];
    copymux_r1 -> reg8 [weight=0];
    copyshr_r -> shr_r [weight=0];
    copyshr_r -> copyshr_g [weight=2];
    shr_r -> and_r [weight=0];
    copyshr_g -> shr_g [weight=0];
    copyshr_g -> copyshr_b [weight=0];
    or_b -> out_0 [weight=0];
    andreturn -> reg18 [weight=0];
    reg18 -> reg19 [weight=0];
    or_g -> or_b [weight=12];
    shlreturn_g -> or_g [weight=0];
    shlreturn_r -> or_r [weight=0];
    copymux_b0 -> lt_b [weight=0];
    copymux_b0 -> reg12 [weight=0];
    lt_b -> mux_b0 [weight=2];
    reg12 -> mux_b0 [weight=0];
    mul_r0 -> sub_r1 [weight=0];
    mux_b1 -> shlreturn_b [weight=0];
    shlreturn_b -> or_g [weight=0];
    merge_g -> copymux_g0 [weight=0];
    copymux_g0 -> lt_g [weight=2];
    copymux_g0 -> reg13 [weight=0];
    mux_g1 -> reg9 [weight=0];
    reg13 -> mux_g0 [weight=0];
    sub_b1 -> merge_b [weight=1];
    merge_b -> copymux_b0 [weight=1];
    and_r -> switch_r [weight=8];
    mux_b0 -> copymux_b1 [weight=1];
    reg9 -> shlreturn_g [weight=0];
    reg8 -> mux_r1 [weight=0];
    mul_r1 -> merge_r [weight=2];
    rgb -> copyshr_r [weight=0];
    reg4 -> merge_g [weight=0];
    reg19 -> reg20 [weight=0];
    reg20 -> reg21 [weight=0];
    reg21 -> reg22 [weight=0];
    reg22 -> reg23 [weight=0];
    reg23 -> reg24 [weight=0];
    reg24 -> or_r [weight=0];
    reg26 -> or_b [weight=0];
    reg1 -> mul_r1 [weight=0];
    reg15 -> reg16 [weight=0];
    reg16 -> reg17 [weight=0];
    reg17 -> andreturn [weight=0];
}
